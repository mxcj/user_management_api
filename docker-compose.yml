version: '3.7'

services:
  traefik:
    image: "traefik:v2.0"
    command:
      - --entrypoints.web.address=:80
      - --providers.docker=true
    ports:
      - "80:80"
      - "8081:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - ./letsencrypt:/letsencrypt    
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--providers.docker.exposedbydefault=false"
    networks:
      - app-network
  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    restart: always
    ports:
      - 8080:80
    volumes:
      - ./src:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - mysql
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.entrypoints=web"
      - "traefik.http.routers.nginx.rule=Host(`${HOST}`) && PathPrefix(`/`)"
      - "traefik.http.routers.nginx.middlewares=portainer-prefix"
      - "traefik.http.middlewares.portainer-prefix.stripprefix.prefixes=/"
      - "traefik.http.middlewares.portainer-prefix.stripprefix.forceslash=false"
    networks:
      - app-network

  mysql:
    image: mysql:5.7.22
    container_name: mysql
    restart: always
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    ports:
      - ${MYSQL_PORT}:3306
    volumes:
      - ./mysql/data:/var/lib/mysql
    networks:
      - app-network


  #PHP Service
  php:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: php
    restart: always
    volumes:
      - ./src:/var/www/html

    ports:
      - 9000:9000
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
  
